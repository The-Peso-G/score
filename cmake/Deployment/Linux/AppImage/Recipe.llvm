#!/bin/bash -eux
set -o pipefail

export OSSIA_SDK=/opt/score-sdk
export QT_DIR=$OSSIA_SDK/qt5-static
export NPROC=$(nproc)
export PATH=$OSSIA_SDK/llvm/bin:$PATH
export GIT=/opt/rh/rh-git29/root/usr/bin/git
export LD_LIBRARY_PATH=$OSSIA_SDK/llvm/lib:/opt/rh/rh-git29/root/usr/lib:/opt/rh/httpd24/root/usr/lib64
export QTDIR=$OSSIA_SDK/qt5-static

export CC=$OSSIA_SDK/llvm/bin/clang
export CXX=$OSSIA_SDK/llvm/bin/clang++
export CFLAGS="-O3"
export CXXFLAGS="-O3"

ln -s /opt/rh/rh-git29/root/usr/bin/git /usr/bin/git || true

(
    wget -nv --no-check-certificate -c  https://github.com/Kitware/CMake/releases/download/v3.16.0/cmake-3.16.0-Linux-x86_64.tar.gz
    tar xaf cmake-*.tar.gz
)

# Set-up paths
export CMAKE_PATH=$(find $PWD/cmake-*/ -type d | head -n 1)bin
export CMAKE=$CMAKE_PATH/cmake


export BUILD_DIR=Score-build
export APP=score
rm -rf ./$BUILD_DIR/$APP.AppDir
mkdir -p ./$BUILD_DIR/$APP.AppDir
cd ./$BUILD_DIR

# Get score from git
(
  $GIT clone --recursive -j16 https://github.com/OSSIA/score
  cd score/
  $GIT checkout $TRAVIS_COMMIT
  $GIT submodule update --init --recursive
  
  cd base/addons
  $GIT clone https://github.com/OSSIA/score-addon-jit
)

# Build score in the AppDir
mkdir -p $APP.AppDir/usr

export SOURCE_DIR=$PWD/score
(
    export INSTALL_ROOT=$(cd $APP.AppDir/usr; pwd)
    mkdir -p build

    cd build
    $CMAKE $SOURCE_DIR \
      -DSCORE_CONFIGURATION=static-release \
      -DCMAKE_INSTALL_PREFIX=$INSTALL_ROOT \
      -DCMAKE_PREFIX_PATH=$QT_DIR/lib/cmake/Qt5 \
      -DOSSIA_SDK=$OSSIA_SDK \
      -DCMAKE_SKIP_RPATH=ON \
      -DOSSIA_USE_FAST_LINKER=1 #\
    # -DCMAKE_EXE_LINKER_FLAGS="-static-libgcc -static-libstdc++ -pthread"


    $CMAKE --build . --target all_unity -- -j$NPROC
    #$CMAKE --build . --target install/strip/fast
    $CMAKE --build . --target install/fast
)

# Copy pixmaps
cp $APP.AppDir/usr/share/applications/ossia-score.desktop $APP.AppDir/
cp $APP.AppDir/usr/share/pixmaps/ossia-score.png $APP.AppDir/

# Copy needed libraries and remove system ones
(
    cd $APP.AppDir
    mkdir -p ./usr/lib/qt5/qml
    cp -rf "$QTDIR/qml/QtQuick.2"  ./usr/lib/qt5/qml || true

    # Fonts
    mkdir -p ./usr/bin/lib/fonts
    cp -rf $SOURCE_DIR/base/lib/resources/*.otf ./usr/bin/lib/fonts/
    cp -rf $SOURCE_DIR/base/lib/resources/*.ttf ./usr/bin/lib/fonts/

    ldd usr/bin/ossia-score | grep "=>" | awk '{print $3}' | grep so |  xargs -I '{}' cp -v '{}' ./usr/lib || true


    # Taken from Subsurface appimage
    # The following are assumed to be part of the base system
    rm -f usr/lib/libcom_err.so.2 || true
    rm -f usr/lib/libcrypt.so.1 || true
    rm -f usr/lib/libdl.so.2 || true
    rm -f usr/lib/libexpat.so.1 || true
    rm -f usr/lib/libfontconfig.so.1 || true
    rm -f usr/lib/libgcc_s.so.1 || true
    rm -f usr/lib/libglib-2.0.so.0 || true
    rm -f usr/lib/libgpg-error.so.0 || true
    rm -f usr/lib/libjack* || true
    rm -f usr/lib/libasound* || true
    rm -f usr/lib/libgssapi_krb5.so.2 || true
    rm -f usr/lib/libgssapi.so.3 || true
    rm -f usr/lib/libhcrypto.so.4 || true
    rm -f usr/lib/libheimbase.so.1 || true
    rm -f usr/lib/libheimntlm.so.0 || true
    rm -f usr/lib/libhx509.so.5 || true
    rm -f usr/lib/libICE.so.6 || true
    rm -f usr/lib/libidn.so.11 || true
    rm -f usr/lib/libk5crypto.so.3 || true
    rm -f usr/lib/libkeyutils.so.1 || true
    rm -f usr/lib/libkrb5.so.26 || true
    rm -f usr/lib/libkrb5.so.3 || true
    rm -f usr/lib/libkrb5support.so.0 || true
    rm -f usr/lib/libm.so.6 || true
    rm -f usr/lib/libp11-kit.so.0 || true
    rm -f usr/lib/libpcre.so.3 || true
    rm -f usr/lib/libpthread.so.0 || true
    rm -f usr/lib/libresolv.so.2 || true
    rm -f usr/lib/libroken.so.18 || true
    rm -f usr/lib/librt.so.1 || true
    rm -f usr/lib/libsasl2.so.2 || true
    rm -f usr/lib/libSM.so.6 || true
    rm -f usr/lib/libusb-1.0.so.0 || true
    rm -f usr/lib/libuuid.so.1 || true
    rm -f usr/lib/libwind.so.0 || true
    rm -f usr/lib/libz.so.1 || true
    rm -f usr/lib/libGL.so.1 || true
    rm -f usr/lib/libGLX.so.0 || true
    rm -f usr/lib/libX11.so.6 || true
    rm -f usr/lib/libX11-xcb.so.1 || true
    rm -f usr/lib/libxcb.so.1 || true
    rm -f usr/lib/libxcb-glx.so.0 || true
    rm -f usr/lib/libxcb-xkb.so.1 || true
    rm -f usr/lib/libxkbcommon-x11.so.0 || true
    rm -f usr/lib/libxkbcommon.so.0 || true
    rm -f usr/lib/libXau.so.6 || true
    rm -f usr/lib/libXext.so.6 || true
    rm -f usr/lib/libGLdispatch.so.0 || true

    # Delete potentially dangerous libraries
    rm -f usr/lib/libgobject* usr/lib/libc.so.* || true

    find . -name '*.a' -exec rm {} \;
    find . -name '*.cmake' -exec rm {} \;

    cd usr/ ; find . -type f -exec sed -i -e 's|/usr/lib|././/lib|g' {} \; ; cd ..
    cd usr/ ; find . -type f -exec sed -i -e "s|$QTDIR/lib|././/lib|g" {} \; ; cd ..
)   

(
    # Copy headers
    
    cd $APP.AppDir
    export HEADERS=$PWD/usr/include
    mkdir -p $HEADERS
    for package in glibc-headers glibc-devel alsa-lib-devel mesa-libGL-devel libxkbcommon-x11-devel kernel-headers ; do
      (
        cd /usr/include 
        rsync -aR $(rpm -ql $package | grep '/usr/include' | grep '\.h' | cut -c 14-  | sort | uniq) $HEADERS
      )
    done
    
    mkdir $HEADERS/qt
    rsync -a $OSSIA_SDK/qt5-static/include/ $HEADERS/qt/
    
    rsync -a $OSSIA_SDK/llvm/include/ $HEADERS/
    rsync -a $OSSIA_SDK/ffmpeg/include/ $HEADERS/
    rsync -a $OSSIA_SDK/portaudio/include/ $HEADERS/
    
    mkdir -p $PWD/usr/lib/clang/7.0.1/include
    rsync -a $OSSIA_SDK/llvm/lib/clang/7.0.1/include/ $PWD/usr/lib/clang/7.0.1/include/
    
    # Strip binaries
    # strip usr/bin/ossia-score usr/bin/ossia-score-vstpuppet || true
)

cp score/cmake/Deployment/Linux/AppImage/qt.conf $APP.AppDir/usr/bin/

tar caf $APP.AppDir.txz "$APP.AppDir"
mv $APP.AppDir.txz /$APP.AppDir.txz
